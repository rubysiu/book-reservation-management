<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xx.dao.AppointmentDao">
    <insert id="addAppointment">
        <!-- ignore 主键冲突，报错 -->
        INSERT ignore INTO appointment (book_id, student_id)
        VALUES (#{bookId}, #{studentId})
    </insert>
    <!--     <delete id="deleteOne" >
            DELETE FROM appointment WHERE book_id=#{bookId} AND student_id=#{studentId}
        </delete>  用不到这个功能-->
    <!-- //查询某个学生的所有预约记录 -->
    <select id="findAndReturn"  resultType="appointment">
        <!-- 如何告诉MyBatis把结果映射到Appointment同时映射book属性 -->
        <!-- 可以自由控制SQL -->
        SELECT
        a.book_id,<!--mybatis会认为是book_id,又因为开启了驼峰命名法 所以最终是bookId -->
        a.student_id,
        a.appoint_time,
        b.book_id "book.book_id",<!--b.book_id as "book.book_id" 告诉mybatis b.book_id是Appointment中book属性的值-->
        b.`name` "book.name",
        b.introd "book.introd",
        b.number "book.number"
        FROM
        appointment a
        INNER JOIN book b ON a.book_id = b.book_id
        WHERE
        a.student_id = #{studentId}
    </select>
<!--   //查询所有被预约了的书-->
    <resultMap id="appointmentMap" type="Appointment">
        <!-- 集合中的property须为oftype定义的pojo对象的属性-->
        <id property="id" column="id"/>
        <result property="bookId" column="book_id"/>
        <result column="student_id" property="studentId"/>
        <result column="appoint_time" property="appointTime"/>
        <collection property="book" ofType="Book">
            <result column="name" property="name" />
            <result column="introd"  property="introd" />
        </collection>
    </resultMap>
        <select id="findAll" resultMap="appointmentMap">
           SELECT
                A.id,
                A.book_id,
                A.student_id,
                A.appoint_time,
                B.`name`,
                B.introd
            FROM
                book AS B,
                appointment AS A
            <where>
                and B.book_id = A.book_id
                <if test="studentId!='' and studentId!=null">
                    and A.student_id like concat('%',concat(#{studentId},'%'))
                </if>
            </where>
        </select>


</mapper>
